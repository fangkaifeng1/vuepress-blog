import{_ as e,o,c as s,a as n}from"./app-rhaCkHXY.js";const t="/vuepress-blog/assets/image-1-mTFhP7rO.png",i="/vuepress-blog/assets/image-UYD7S2KH.png",k={},c=n('<p>基于 HTTP 的前端鉴权背景? 典型的 session 登陆/验证流程： 1、浏览器登录发送账号密码，服务端查用户库，校验用户 2、服务端把用户登录状态存为 Session，生成一个 sessionId 3、通过登录接口返回，把 sessionId set 到 cookie 上 4、此后浏览器再请求业务接口，sessionId 随 cookie 带上 5、服务端查 sessionId 校验 session 6、成功后正常做业务处理，返回结果</p><p>Session 的存储方式 显然，服务端只是给 cookie 一个 sessionId，而 session 的具体内容（可能包含用户信息、session 状态等），要自己存一下。存储的方式有几种：</p><p>Redis（推荐）：内存型数据库，redis中文官方网站。以 key-value 的形式存，正合 sessionId-sessionData 的场景；且访问快。 内存：直接放到变量里。一旦服务重启就没了 数据库：普通数据库。性能不高。</p><p>cookie 为什么是最方便的存储方案，有哪些操作 cookie 的方式? HTTP 返回的一个 Set-Cookie 头用于向浏览器写入「一条（且只能是一条）」cookie，格式为 cookie 键值 + 配置键值。 HTTP 请求的 Cookie 头用于浏览器把符合当前「空间、时间、使用方式」配置的所有 cookie 一并发给服务端。因为由浏览器做了筛选判断，就不需要归还配置内容了，只要发送键值就可以。</p><p>session 方案是如何实现的，存在哪些问题? 从「存储」角度，把 session 集中存储。如果我们用独立的 Redis 或普通数据库，就可以把 session 都存到一个库里。 session 的维护给服务端造成很大困扰，我们必须找地方存放它，又要考虑分布式的问题，甚至要单独为了它启用一套 Redis 集群。</p><p>token 方案是如何实现的，如何进行编码和防篡改？jwt 是做什么的？refresh token 的实现和意义? 一个登录场景，也不必往 session 存太多东西，那为什么不直接打包到 cookie 中呢？这样服务端不用存了，每次只要核验 cookie 带的「证件」有效性就可以了，也可以携带一些轻量的信息。这种方式通常被叫做 token。 token 的流程是这样的：</p><p>1、用户登录，服务端校验账号密码，获得用户信息 2、把用户信息、token 配置编码成 token，通过 cookie set 到浏览器 3、此后用户请求业务接口，通过 cookie 携带 token 4、接口校验 token 有效性，进行正常业务接口处理</p><p>在前面 cookie 说过，cookie 并不是客户端存储凭证的唯一方式。token 因为它的「无状态性」，有效期、使用限制都包在 token 内容里，对 cookie 的管理能力依赖较小，客户端存起来就显得更自由。但 web 应用的主流方式仍是放在 cookie 里，毕竟少操心。</p><p>给 token 加签名，来识别 token 是否被篡改过。</p><p>JWT <img src="'+t+'" alt="Alt text"></p><p>token，作为权限守护者，最重要的就是「安全」。 业务接口用来鉴权的 token，我们称之为 access token。越是权限敏感的业务，我们越希望 access token 有效期足够短，以避免被盗用。但过短的有效期会造成 access token 经常过期，过期后怎么办呢？ 一种办法是，让用户重新登录获取新 token，显然不够友好，要知道有的 access token 过期时间可能只有几分钟。 另外一种办法是，再来一个 token，一个专门生成 access token 的 token，我们称为 refresh token。</p><p>session 和 token 有什么异同和优缺点? session 和 token 都是边界很模糊的概念，就像前面说的，refresh token 也可能以 session 的形式组织维护。 狭义上，我们通常认为 session 是「种在 cookie 上、数据存在服务端」的认证方案，token 是「客户端存哪都行、数据存在 token 里」的认证方案。对 session 和 token 的对比本质上是「客户端存 cookie / 存别地儿」、「服务端存数据 / 不存数据」的对比。</p><p>单点登录是什么？实现思路和在浏览器下的处理? 简单的，如果业务系统都在同一主域名下，比如wenku.baidu.com tieba.baidu.com，就好办了。可以直接把 cookie domain 设置为主域名 baidu.com，百度也就是这么干的。如果是复杂的，即域名不一致。 <img src="'+i+'" alt="Alt text"></p>',13),p=[c];function a(_,r){return o(),s("div",null,p)}const m=e(k,[["render",a],["__file","cookie、session、token、jwt、单点登录.html.vue"]]);export{m as default};
